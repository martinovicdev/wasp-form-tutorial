app FormMaster {
  wasp: {
    version: "^0.15.0"
  },
  title: "FormMaster",

  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}, // This is a very naive implementation, use 'email' in production instead
      //google: {}, // https://wasp-lang.dev/docs/integrations/google
      //gitHub: {}, // https://wasp-lang.dev/docs/integrations/github
      //email: {} // https://wasp-lang.dev/docs/guides/email-auth
    },
    onAuthFailedRedirectTo: "/login",
  }
}

route RootRoute { path: "/", to: MainPage }
page MainPage {
  authRequired: true,
  component: import { MainPage } from "@src/MainPage"
}

route CustomerRoute { path: "/customer", to: CustomerPage }
page CustomerPage {
  authRequired: true,
  component: import { CustomerPage } from "@src/CustomerPage"
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import { LoginPage } from "@src/auth/LoginPage"
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import { SignupPage } from "@src/auth/SignupPage"
}


query getCustomers {
    fn: import { getCustomers } from "@src/customers/queries",
    entities: [Customer]
}

query getCustomer {
    fn: import { getCustomer } from "@src/customers/queries",
    entities: [Customer]
}

action createCustomer {
    fn: import { createCustomer } from "@src/customers/actions",
    entities: [Customer]
}

action updateCustomer {
    fn: import { updateCustomer } from "@src/customers/actions",
    entities: [Customer]
}

action deleteCustomer {
    fn: import { deleteCustomer } from "@src/customers/actions",
    entities: [Customer]
}

